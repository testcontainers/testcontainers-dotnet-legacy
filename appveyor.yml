version: 0.0.2.{build}
pull_requests:
  do_not_increment_build_number: true
branches:
  only:
    - master
image:
  - Ubuntu
configuration: Release
environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  APPVEYOR_YML_DISABLE_PS_LINUX: true
stack: docker
services:
  - docker
before_build:
  - ps: build.ps1 --target=Restore-NuGet-Packages
build_script:
  - ps: build.ps1 --target=Build
before_test:
  - ps: Copy-Item -Path ./test/RedisConfigs/ -Destination X:/host/RedisConfigs -recurse -Force
test_script:
  - ps: build.ps1 --target=Test
after_test:
  - sh: |
      dotnet tool install -g coveralls.net --version 1.0.0
      csmacnz.Coveralls --opencover -i test-coverage/coverage.opencover.xml --useRelativePaths --repoToken $COVERALLS_REPO_TOKEN

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: "{version}"
  package_version: "{version}"
  assembly_version: "{version}"
  file_version: "{version}"
  informational_version: "{version}"
nuget:
  disable_publish_on_pr: false
deploy:
  - provider: NuGet
    server: https://www.myget.org/F/testcontainers-dotnet/api/v2
    api_key:
      secure: WiR/QSyrLpScLC5KC0QQMBJE9ulskPG7UB6TPSrQ3ZRivHEUTSr70WlWHNA/J41u
    skip_symbols: false
    symbol_server: https://www.myget.org/F/testcontainers-dotnet/symbols/api/v2/package
    on:
      branch: master
  - provider: NuGet
    name: production
    api_key:
      secure: 5zQzvnn+PrBF/J2mzSncavipOTj9+nqsZwiKmks//kQvgGfG3wbGeeSsuZRPTwJ5
    skip_symbols: false
    on:
      branch: master
      APPVEYOR_REPO_TAG: true
